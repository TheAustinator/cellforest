---
  # FILE STRUCTURE
  #
  file_map:
    normalize:
      corrected_umi: corrected_umi.mtx    # from sctransform
      pearson_residual: pearson_residuals.tsv    # from sctransform
      qc_metrics: qc_metrics.tsv
    reduce:
      pca_embeddings: pca_embeddings.tsv
      pca_loadings: pca_loadings.tsv
      pca_stdev: pca_stdev.tsv
      umap_embeddings: umap_embeddings.tsv
    cluster:
      clusters: clusters.tsv
    diffexp_bulk:
      diffexp_bulk_result: diffexp.tsv
    diffexp:
      diffexp_result: diffexp.tsv
    markers:
      markers: markers.tsv
  
      
  plot_kwargs_defaults:
    stratify:
      default: None
    plot_size:  # resolution in px
      default: [500, 500]
      large: [1000, 1000]
    filename_ext: png
    
  # supported kwargs for plot_kwargs
  #   stratify: color plots based on column in metadata along which to stratify the data
  #   plot_size: pixel resolution of produced plots
  #   alpha: transparency of produced points, lines, and fills - does not work on Seurat plots (yet)
  #   size: point size in scatter plots
  #   npcs: number of principal components to show PCA embeddings and loadings
  plot_map:
    root:
      _UMIS_PER_CELL_HIST_: ~
      _UMIS_PER_BARCODE_RANK_CURV_: ~
    normalize:
      _GENES_PER_CELL_HIST_: ~
      _UMIS_PER_CELL_HIST_:
        # plot_method and filename(s) can be inferred from key if not provided explicitly
        plot_method: plot_umis_per_cell_hist  # optional, will overwrite inferred plot_method
        filename:  # optional, will overwrite inferred name
          - umis_per_cell_hist-plot_size:500+500-stratify:sample
          - umis_per_cell_hist-plot_size:500+500-stratify:none
          - umis_per_cell_hist-plot_size:500+500-stratify:cell
        plot_kwargs:  # optional, if not defined then will set all kwargs to "default" from `plot_kwargs_defaults`
          stratify:
            - sample
            - lane
            - default
          plot_size: default  # infers size from `plot_kwargs["stratify"]` and becomes ["default", "default", "default"]
      _FAKE_TEST_PLOT_: ~
      _UMIS_VS_GENES_SCAT_: ~  # equivalent to saying `plot_kwargs: {stratify: default, plot_size: default}`
      _PERC_MITO_PER_CELL_VLN_:
        plot_kwargs:  # optional, if not defined then will set all kwargs to "default" from `plot_kwargs_defaults`
          stratify: 
            - sample
      _UMIS_VS_PERC_MITO_SCAT_: ~
      _PERC_RIBO_PER_CELL_VLN: ~
      _UMIS_VS_PERC_RIBO_SCAT:
        plot_kwargs:  # optional, if not defined then will set all kwargs to "default" from `plot_kwargs_defaults`
          stratify: sample
      _PERC_HSP_PER_CELL_VLN: ~
      _HIGHEST_EXPRS_DENS_:
        plot_kwargs:  # will map 1-to-1 (not all possible combinations)
          stratify:
            - sample
            - lane
          plot_size: large
    reduce:
      _PCA_ELBOW_CURV_: ~
      _PCA_LOADINGS_SCAT_:
        plot_kwargs:
          plot_size: large
      _PCA_EMBEDDINGS_SCAT_:
        plot_kwargs:
          stratify:
            - sample
            - nFeature_RNA
          plot_size: large
          npcs: 7
      _UMAP_EMBEDDINGS_SCAT_:
        plot_kwargs:
          stratify:
            - sample
            - nFeature_RNA
          plot_size: large
  
  
  layers:
    matrix:
      rna: rna.pickle
      rna_r: rna.rds
      rna_ann: rna.anndata
    meta:
      meta: meta.tsv
  process_layers:
    root:
      - matrix
      - meta
    normalize:
      - matrix
      - meta
    reduce:
      - meta
  
  # HOOKS
  #   Hook will be collected recursively from directories or processes specified
  #   in `hook_sources`. Hook containing files must be named `hooks.py`, and hook
  #   functions names must begin with `hook_`.
  #   (not tested on Windows)
  #
  #   hook_sources:
  #     Paths to search recursively for hooks. Can be specified in module or
  #     absolute path syntax.
  #   setup_hooks: Hooks to run prior to process run. (ordered)
  #   clean_hooks: Hooks to run after process run. (ordered)
  setup_hooks:
    - hook_goto_process
    - hook_mkdirs
    - hook_mark_incomplete
    - hook_input_exists
    - hook_store_run_spec
    - hook_catalogue
    - hook_comparative
    - hook_store_temp_meta
  clean_hooks:
    - hook_unify_matrix_node
    - hook_generate_plots
    - hook_clear_metadata_cache
    - hook_clean_temp_meta
    - hook_clean_unversioned
    - hook_garbage_collection
    - hook_mark_complete
  dataprocess_default_attrs:
    temp_meta: true
    matrix_layer: false
    plots: true
  
  process_sources:
    - cellforest.processes
  hook_sources:
    - dataforest.hooks
    - cellforest.hooks
  plot_sources:
    - cellforest.plot
  
  temp_meta_filename: temp_meta.tsv